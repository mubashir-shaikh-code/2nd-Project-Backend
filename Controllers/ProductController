const Product = require('../Models/Product');
const cloudinary = require('../Cloudinary');

// ✅ Get all approved products (for homepage)
const getAllProducts = async (req, res) => {
  try {
    const products = await Product.find({ status: 'approved' }).sort({ createdAt: -1 });
    res.status(200).json(products);
  } catch (err) {
    res.status(500).json({ error: 'Server Error' });
  }
};

// ✅ Get pending products (admin only)
const getPendingProducts = async (req, res) => {
  try {
    const pendingProducts = await Product.find({ status: 'pending' }).sort({ createdAt: -1 });
    res.status(200).json(pendingProducts);
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Server Error' });
  }
};

// ✅ Get all products posted by a specific user (for user dashboard)
const getUserProducts = async (req, res) => {
  try {
    const { userEmail } = req.query;

    if (!userEmail) {
      return res.status(400).json({ error: 'User email is required' });
    }

    const products = await Product.find({ userEmail }).sort({ createdAt: -1 });
    res.status(200).json(products);
  } catch (err) {
    console.error('Error fetching user products:', err);
    res.status(500).json({ error: 'Server error while fetching user products' });
  }
};

// ✅ Approve a product (admin)
const approveProduct = async (req, res) => {
  try {
    const { id } = req.params;

    const updatedProduct = await Product.findByIdAndUpdate(
      id,
      { status: 'approved' },
      { new: true }
    );

    if (!updatedProduct) {
      return res.status(404).json({ error: 'Product not found' });
    }

    res.status(200).json({ message: 'Product approved successfully', product: updatedProduct });
  } catch (err) {
    console.error('Error approving product:', err);
    res.status(500).json({ error: 'Server error while approving product' });
  }
};

// ✅ Reject/Delete a product (admin)
const rejectProduct = async (req, res) => {
  try {
    const { id } = req.params;

    const rejectedProduct = await Product.findByIdAndDelete(id);

    if (!rejectedProduct) {
      return res.status(404).json({ error: 'Product not found' });
    }

    res.status(200).json({ message: 'Product rejected and removed successfully' });
  } catch (err) {
    console.error('Error rejecting product:', err);
    res.status(500).json({ error: 'Server error while rejecting product' });
  }
};

// ✅ Post a new product (user submission)
const postProduct = async (req, res) => {
  try {
    const { description, price, image, userEmail, category } = req.body;

    if (!description || !price || !image || !userEmail || !category) {
      return res.status(400).json({ error: 'All fields are required' });
    }

    const uploadRes = await cloudinary.uploader.upload(image, {
      folder: 'products',
    });

    const newProduct = new Product({
      description,
      price,
      image: uploadRes.secure_url,
      userEmail,
      category,
      status: 'pending',
    });

    const savedProduct = await newProduct.save();
    res.status(201).json({ message: 'Product submitted for approval', product: savedProduct });
  } catch (err) {
    console.error('Error posting product:', err);
    res.status(500).json({ error: 'Server error while posting product' });
  }
};

// ✅ Update a product (user edits)
const updateProduct = async (req, res) => {
  try {
    const updatedProduct = await Product.findByIdAndUpdate(req.params.id, req.body, {
      new: true,
    });

    if (!updatedProduct) {
      return res.status(404).json({ message: 'Product not found' });
    }

    res.status(200).json(updatedProduct);
  } catch (err) {
    res.status(500).json({ message: 'Server error' });
  }
};

module.exports = {
  getAllProducts,
  getPendingProducts,
  getUserProducts,
  approveProduct,
  rejectProduct,
  postProduct,
  updateProduct,
};

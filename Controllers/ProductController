const Product = require('../Models/Product');
const cloudinary = require('../Cloudinary');

// Get All Products (Approved only)
const getApprovedProducts = async (req, res) => {
  try {
    const products = await Product.find({ status: 'approved' }).sort({ createdAt: -1 });
    res.status(200).json(products);
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Failed to fetch approved products' });
  }
};

// Get All Pending Products (Admin Panel)
const getPendingProducts = async (req, res) => {
  try {
    const pendingProducts = await Product.find({ status: 'pending' }).sort({ createdAt: -1 });
    res.status(200).json(pendingProducts);
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Failed to fetch pending products' });
  }
};

// Approve a Product (Admin only)
const approveProduct = async (req, res) => {
  try {
    const { productId } = req.params;

    const product = await Product.findByIdAndUpdate(
      productId,
      { status: 'approved' },
      { new: true }
    );

    if (!product) {
      return res.status(404).json({ error: 'Product not found' });
    }

    res.status(200).json({ message: 'Product approved successfully', product });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Error approving product' });
  }
};

// Post New Product (always pending)
const postProduct = async (req, res) => {
  try {
    const { description, price, image, userEmail, category } = req.body;

    if (!description || !price || !image || !userEmail || !category) {
      return res.status(400).json({ error: 'All fields are required' });
    }

    const uploadRes = await cloudinary.uploader.upload(image, {
      folder: 'products',
    });

    const imageUrl = uploadRes.secure_url;

    const newProduct = new Product({
      description,
      price,
      image: imageUrl,
      userEmail,
      category,
      status: 'pending', // new field
    });

    await newProduct.save();

    res.status(201).json({ message: 'Product submitted for approval' });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Server error while posting product' });
  }
};

module.exports = {
  getApprovedProducts,
  getPendingProducts,
  approveProduct,
  postProduct
};
